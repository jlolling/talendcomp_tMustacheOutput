<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.core.model.utils.NodeUtil
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List 
		java.util.ArrayList
	" 
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	boolean log4jEnabled = "true".equals(org.talend.core.model.process.ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__")) && 
   							"JOBLET".equals(node.getComponent().getComponentType().toString()) == false;
	@SuppressWarnings("unchecked")	
	String incomingConnName = null;
	IMetadataTable metadata = null;
	List<? extends IConnection> inConns = NodeUtil.getIncomingConnections(node, IConnectionCategory.DATA);
	if (inConns != null && inConns.isEmpty() == false) {
    	IConnection inConn = inConns.get(0);
    	incomingConnName = inConn.getName();
    	metadata = inConn.getMetadataTable();
	}
	List<IMetadataColumn> listColumns = new ArrayList<IMetadataColumn>(); // dummy
	if (metadata != null) {
		listColumns = metadata.getListColumns();
	}
	String outgoingConnName = null;
	List<? extends IConnection> outConns = NodeUtil.getOutgoingConnections(node, IConnectionCategory.DATA);
	if (outConns != null && outConns.isEmpty() == false) {
    	IConnection outConn = outConns.get(0);
    	outgoingConnName = outConn.getName();
	}
	String outputType = ElementParameterParser.getValue(node, "__OUTPUT_STRUCTURE__");
	String outputField = ElementParameterParser.getValue(node, "__OUTPUT_COLUMN__");
	if (incomingConnName != null) { %>
	<%=cid%>.newData();
	try {
<%		for (int i = 0; i < listColumns.size(); i++) {
			IMetadataColumn mc = listColumns.get(i);
			String columnName = mc.getLabel();
			boolean isNullable = mc.isNullable(); %>
	<%=cid%>.setValue("<%=columnName%>", <%=incomingConnName%>.<%=columnName%>, <%=isNullable%>);
<%		} %>
	} catch (Throwable t) {
		Exception ex = new Exception("Set values failed: " + t.getMessage(), t);
		globalMap.put("<%=cid%>_ERROR_MESSAGE", ex.getMessage());
		throw ex;
	}
<% 	if ("ONE_DOCUMENT".equals(outputType)) { %>
	<%=cid%>.addDataToList();
<%		} %>
<%	} %>
<%	if (outgoingConnName != null && incomingConnName != null) {
		if ("DOCUMENT_PER_INPUT_ROW".equals(outputType)) { %>
	try {
		<%=outgoingConnName%>.<%=outputField%> = <%=cid%>.render();
	} catch (Throwable t) {
		Exception ex = new Exception("Render template per record failed: " + t.getMessage(), t);
		globalMap.put("<%=cid%>_ERROR_MESSAGE", ex.getMessage());
		throw ex;
	}		
<%		} %>
<%		for (int i = 0; i < listColumns.size(); i++) {
			IMetadataColumn mc = listColumns.get(i);
			String columnName = mc.getLabel(); 
			if ("ONE_DOCUMENT".equals(outputType) || columnName.equals(outputField) == false) { %>
	<%=outgoingConnName%>.<%=columnName%> = <%=incomingConnName%>.<%=columnName%>;
<%			} %>	
<%		} %>
<%	} %>
	nb_line_<%=cid %>++;
	

